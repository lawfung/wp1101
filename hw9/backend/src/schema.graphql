type Query {
  chatBox(name1: String, name2: String): ChatBox!
}
type Mutation {
  createChatBox(name1: String!, name2: String!): ChatBox!
  createMessage(from: String!, to: String!, content: String!): Message!
}
type Subscription {
  message(from: String, to: String): MessageSubscriptionPayload!
}
type ChatBox {
  id: ID!
  name: String!
  messages: [Message!]
}
type Message {
  id: ID!
  sender: User!
  body: String!
}
type User {
  id: ID!
  name: String!
}
enum MutationType {
  CREATED
  UPDATED
  DELETED
  CLEARED
}
type MessageSubscriptionPayload {
  mutation: MutationType!
  message: Message!
}